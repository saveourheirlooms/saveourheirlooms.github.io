{"ast":null,"code":"var _jsxFileName = \"/home/emre/Desktop/src/src/components/createnft.component.js\";\nimport { Link } from \"react-router-dom\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport SkeletonNft from \"../skeletons/SkeletonNft\";\nimport axios from \"axios\";\nimport { NFTStorage, File } from \"nft.storage\";\nimport Web3 from \"web3\";\nimport Contract from \"../abis/contract.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require(\"fs\");\n\nconst apiKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDc2ZEE3OGFiMzUxMDM1Q2ViNDhhOTk3MkE3MkIyMzg1RmZEOGFGRmIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYyOTgzMjgzNjM3NSwibmFtZSI6ImhlaXJsb29tIn0.ZuYum8nD_OQdfbCkyCtrVU0Bi0WZyD5Kwe4e9M05Kk4\";\nconst client = new NFTStorage({\n  token: apiKey\n});\nexport default class NftList extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData();\n    await this.loadWeb3();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const address = \"0x6B08fB9FBF160acD475FF23D4E2950546290f56e\";\n\n    if (address) {\n      const abi = Contract;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        contract\n      });\n      console.log(this.state.contract);\n    } else {\n      window.alert(\"Smart contract not deployed to detect network!\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.captureFile = event => {\n      event.preventDefault();\n      console.log(\"file captured.\");\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer.from(reader.result)\n        });\n      };\n    };\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeDesc = this.onChangeDesc.bind(this);\n    this.onChangeHash = this.onChangeHash.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeMetadata = this.onChangeMetadata.bind(this);\n    this.onChangeContract = this.onChangeContract.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      name: \"\",\n      desc: null,\n      hash: null,\n      image: null,\n      price: null,\n      category: null,\n      metadata: null,\n      contract_address: null,\n      contract: null,\n      account: \"\"\n    };\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeDesc(e) {\n    this.state.desc = e.target.value;\n  }\n\n  onChangeHash(e) {\n    this.state.hash = e.target.value;\n  }\n\n  onChangePrice(e) {\n    this.state.price = e.target.value;\n  }\n\n  onChangeCategory(e) {\n    this.state.category = e.target.value;\n  }\n\n  onChangeMetadata(e) {\n    this.state.metadata = e.target.value;\n  }\n\n  onChangeContract(e) {\n    this.state.contract_address = e.target.value;\n  }\n\n  /*https://ipfs.io/ipfs/bafybeihhttvpdcjp243iiltqpfanhpztvqsxi7tiva7qchzmljgrxpgace/pinpie.jpg\n   */\n  async nftStorage(name, desc, category) {\n    const metadata = await client.store({\n      name: name,\n      description: desc,\n      category: category,\n      image: new File([this.state.buffer], \"pinpie.jpg\", {\n        type: \"image/jpg\"\n      })\n    });\n    const url = \"https://ipfs.io/ipfs/\" + metadata.url.substring(7);\n    const image_url = \"https://ipfs.io/ipfs/\" + metadata.data.image.href.substring(7);\n    this.setState({\n      image: image_url\n    });\n    return url; // ipfs://bafyreib4pff766vhpbxbhjbqqnsh5emeznvujayjj4z2iu533cprgbz23m/metadata.json\n  }\n\n  async onSubmit() {\n    const name = this.state.name;\n    const desc = this.state.desc;\n    const category = this.state.category;\n    const metadata = await this.nftStorage(name, desc, category);\n    await this.state.contract.methods.mintItem(this.state.account, metadata, metadata).send({\n      from: this.state.account\n    }, (err, res) => {\n      if (err) {\n        console.log(\"An error occured\", err);\n        return;\n      }\n\n      this.setState({\n        hash: res\n      });\n      console.log(\"Hash of the transaction: \" + res);\n    }).once(\"confirmation\", r => {\n      console.log(this.state.hash);\n      console.log(\"success\");\n      this.loadToMongoDB();\n    });\n  }\n\n  loadToMongoDB() {\n    const nft = {\n      name: this.state.name,\n      desc: this.state.desc,\n      hash: this.state.hash,\n      image: this.state.image,\n      price: this.state.price,\n      category: this.state.category,\n      metadata: this.state.metadata,\n      contract: this.state.contract_address\n    };\n    axios.post(\"http://167.99.133.71:5000/nfts/add\", nft).then(res => console.log(res.data));\n  }\n  /*onSubmit(e){\n        e.preventDefault();\n         const nft = {\n            name: this.state.name,\n            desc: this.state.desc,\n            hash: this.state.hash,\n            image: this.state.image,\n            price: this.state.price,\n            category: this.state.category,\n            metadata: this.state.metadata,\n            contract: this.state.contract,\n        }\n         axios.post('http://localhost:5000/nfts/add',nft)\n        .then(res => console.log(res.data));\n      }*/\n\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mx-auto\",\n        style: {\n          width: \"1080px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"mb-sm-4 display-4 fw-light lh-sm fs-4 fs-lg-6 fs-xxl-7\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              this.onSubmit();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.name,\n                onChange: this.onChangeName,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Desc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.desc,\n                onChange: this.onChangeDesc,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.hash,\n                onChange: this.onChangeHash,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: this.captureFile,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: this.state.price,\n                onChange: this.onChangePrice,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.category,\n                onChange: this.onChangeCategory,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Metadata\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.metadata,\n                onChange: this.onChangeMetadata,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              style: {\n                width: \"420px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputName\",\n                children: \"NFT Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.contract_address,\n                onChange: this.onChangeContract,\n                class: \"form-control input-fileName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"projectName\",\n                class: \"form-text text-muted\",\n                children: \"General Name for your project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              class: \"d-inline-block btn btn-primary\",\n              value: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/emre/Desktop/src/src/components/createnft.component.js"],"names":["Link","React","Component","useEffect","useState","SkeletonNft","axios","NFTStorage","File","Web3","Contract","fs","require","apiKey","client","token","NftList","componentWillMount","loadBlockchainData","loadWeb3","web3","window","accounts","eth","getAccounts","setState","account","address","abi","contract","console","log","state","alert","constructor","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","from","result","onChangeName","bind","onChangeDesc","onChangeHash","onChangePrice","onChangeCategory","onChangeMetadata","onChangeContract","onSubmit","name","desc","hash","image","price","category","metadata","contract_address","ethereum","enable","currentProvider","e","value","nftStorage","store","description","type","url","substring","image_url","data","href","methods","mintItem","send","err","res","once","r","loadToMongoDB","nft","post","then","componentDidMount","render","width"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport SkeletonNft from \"../skeletons/SkeletonNft\";\nimport axios from \"axios\";\nimport { NFTStorage, File } from \"nft.storage\";\nimport Web3 from \"web3\";\nimport Contract from \"../abis/contract.json\";\nconst fs = require(\"fs\");\n\nconst apiKey =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDc2ZEE3OGFiMzUxMDM1Q2ViNDhhOTk3MkE3MkIyMzg1RmZEOGFGRmIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYyOTgzMjgzNjM3NSwibmFtZSI6ImhlaXJsb29tIn0.ZuYum8nD_OQdfbCkyCtrVU0Bi0WZyD5Kwe4e9M05Kk4\";\nconst client = new NFTStorage({ token: apiKey });\n\nexport default class NftList extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData();\n    await this.loadWeb3();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const address = \"0x6B08fB9FBF160acD475FF23D4E2950546290f56e\";\n    if (address) {\n      const abi = Contract;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({ contract });\n      console.log(this.state.contract);\n    } else {\n      window.alert(\"Smart contract not deployed to detect network!\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeDesc = this.onChangeDesc.bind(this);\n    this.onChangeHash = this.onChangeHash.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeMetadata = this.onChangeMetadata.bind(this);\n    this.onChangeContract = this.onChangeContract.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      name: \"\",\n      desc: null,\n      hash: null,\n      image: null,\n      price: null,\n      category: null,\n      metadata: null,\n      contract_address: null,\n      contract: null,\n      account: \"\",\n    };\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  onChangeName(e) {\n    this.setState({ name: e.target.value });\n  }\n  onChangeDesc(e) {\n    this.state.desc = e.target.value;\n  }\n  onChangeHash(e) {\n    this.state.hash = e.target.value;\n  }\n  onChangePrice(e) {\n    this.state.price = e.target.value;\n  }\n  onChangeCategory(e) {\n    this.state.category = e.target.value;\n  }\n  onChangeMetadata(e) {\n    this.state.metadata = e.target.value;\n  }\n  onChangeContract(e) {\n    this.state.contract_address = e.target.value;\n  }\n\n  captureFile = (event) => {\n    event.preventDefault();\n    console.log(\"file captured.\");\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer.from(reader.result) });\n    };\n  };\n  /*https://ipfs.io/ipfs/bafybeihhttvpdcjp243iiltqpfanhpztvqsxi7tiva7qchzmljgrxpgace/pinpie.jpg\n   */\n  async nftStorage(name, desc, category) {\n    const metadata = await client.store({\n      name: name,\n      description: desc,\n      category: category,\n      image: new File([this.state.buffer], \"pinpie.jpg\", { type: \"image/jpg\" }),\n    });\n    const url = \"https://ipfs.io/ipfs/\" + metadata.url.substring(7);\n    const image_url =\n      \"https://ipfs.io/ipfs/\" + metadata.data.image.href.substring(7);\n    this.setState({ image: image_url });\n    return url;\n    // ipfs://bafyreib4pff766vhpbxbhjbqqnsh5emeznvujayjj4z2iu533cprgbz23m/metadata.json\n  }\n\n  async onSubmit() {\n    const name = this.state.name;\n    const desc = this.state.desc;\n    const category = this.state.category;\n    const metadata = await this.nftStorage(name, desc, category);\n    await this.state.contract.methods\n      .mintItem(this.state.account, metadata, metadata)\n      .send({ from: this.state.account }, (err, res) => {\n        if (err) {\n          console.log(\"An error occured\", err);\n          return;\n        }\n        this.setState({ hash: res });\n        console.log(\"Hash of the transaction: \" + res);\n      })\n      .once(\"confirmation\", (r) => {\n        console.log(this.state.hash);\n        console.log(\"success\");\n\n        this.loadToMongoDB();\n      });\n  }\n\n  loadToMongoDB() {\n    const nft = {\n      name: this.state.name,\n      desc: this.state.desc,\n      hash: this.state.hash,\n      image: this.state.image,\n      price: this.state.price,\n      category: this.state.category,\n      metadata: this.state.metadata,\n      contract: this.state.contract_address,\n    };\n\n    axios\n      .post(\"http://167.99.133.71:5000/nfts/add\", nft)\n      .then((res) => console.log(res.data));\n  }\n\n  /*onSubmit(e){\n        e.preventDefault();\n\n        const nft = {\n            name: this.state.name,\n            desc: this.state.desc,\n            hash: this.state.hash,\n            image: this.state.image,\n            price: this.state.price,\n            category: this.state.category,\n            metadata: this.state.metadata,\n            contract: this.state.contract,\n        }\n\n        axios.post('http://localhost:5000/nfts/add',nft)\n        .then(res => console.log(res.data));\n\n\n    }*/\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"mx-auto\" style={{ width: \"1080px\" }}>\n          <h1 class=\"mb-sm-4 display-4 fw-light lh-sm fs-4 fs-lg-6 fs-xxl-7\">\n            Create\n          </h1>\n          <div class=\"row\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                this.onSubmit();\n              }}\n            >\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Name</label>\n                <input\n                  value={this.state.name}\n                  onChange={this.onChangeName}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Desc</label>\n                <input\n                  value={this.state.desc}\n                  onChange={this.onChangeDesc}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Hash</label>\n                <input\n                  value={this.state.hash}\n                  onChange={this.onChangeHash}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Image</label>\n                <input\n                  type=\"file\"\n                  onChange={this.captureFile}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Price</label>\n                <input\n                  type=\"number\"\n                  value={this.state.price}\n                  onChange={this.onChangePrice}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Category</label>\n                <input\n                  value={this.state.category}\n                  onChange={this.onChangeCategory}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Metadata</label>\n                <input\n                  value={this.state.metadata}\n                  onChange={this.onChangeMetadata}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n              <div class=\"form-group\" style={{ width: \"420px\" }}>\n                <label for=\"exampleInputName\">NFT Contract</label>\n                <input\n                  value={this.state.contract_address}\n                  onChange={this.onChangeContract}\n                  class=\"form-control input-fileName\"\n                />\n                <small id=\"projectName\" class=\"form-text text-muted\">\n                  General Name for your project\n                </small>\n              </div>\n\n              <input\n                type=\"submit\"\n                class=\"d-inline-block btn btn-primary\"\n                value=\"Mint\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}